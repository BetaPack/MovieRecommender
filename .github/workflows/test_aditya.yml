name: Movie Recommender Feature Tests

on:
  push:
    branches:
      - feature
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test_user -d test_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Updated to v3

      - name: Set up Python
        uses: actions/setup-python@v3  # Updated to v3
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Signup Tests
        env:
          DATABASE_URL: postgres://test_user:test_pass@localhost:5432/test_db
        run: |
          python -m pytest test/test_signup.py --disable-warnings --junitxml=test/results/test_signup_results.xml
      - name: Run Login Tests
        env:
          DATABASE_URL: postgres://test_user:test_pass@localhost:5432/test_db
        run: |
          python -m pytest test/test_login.py --disable-warnings --junitxml=test/results/test_login_results.xml
      - name: Run Prediction Tests
        env:
          DATABASE_URL: postgres://test_user:test_pass@localhost:5432/test_db
        run: |
          python -m pytest test/test_prediction.py --disable-warnings --junitxml=test/results/test_prediction_results.xml
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3  # Updated to v3
        with:
          name: test-results
          path: test/results
